{"version":3,"sources":["assets/images/logo.svg","ui/loading.js","ui/music.js","state/actions/player.js","state/constants/player.js","ui/musicsContainer.js","ui/playlist.js","ui/playlistsContainer.js","ui/vitrine.js","helpers/api.js","pages/home/index.js","routes/routes.js","state/actions/home.js","state/constants/home.js","routes/router.js","state/reducers/home.js","state/reducers/player.js","state/store.js","ui/header.js","ui/player.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loading","props","loading","className","children","connect","state","currentMusic","playerReducer","music","isPlaying","dispatch","setMusic","type","payload","togglePlay","onClick","id","src","cover","alt","title","name","artists","length","map","artist","i","MusicSlider","musics","key","Playlist","playlist","image","PlaylistsContainer","playlists","Vitrine","data","API_URL","onSuccessHandler","res","resolve","onErrorHandler","err","response","console","error","Api","getMusics","Promise","axios","url","method","then","catch","getPlaylistsVitrines","count","region","Routes","routeName","component","musicsFind","homeReducer","vitrines","fetchMusicsFind","a","result","success","fetchVitrines","useEffect","vitrine","exact","path","Router","Page","to","initialState","action","currentPos","duration","reducers","combineReducers","store","createStore","applyMiddleware","thunk","Header","Logo","setPos","pos","setDuration","audio","useRef","Audio","currentPosInterval","link320","link128","link64","current","onloadedmetadata","play","setInterval","currentTime","clearInterval","pause","Fragment","parseInt","style","width","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.83c066c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.8a4e1940.svg\";","import React from 'react';\n\nfunction Loading(props) {\n    if (props.loading) {\n        return <div className=\"loading\"><div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div></div>;\n    } else {\n        return props.children;\n    }\n}\n\nexport default Loading;","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Music(props) {\n    const { music, currentMusic, setMusic, togglePlay, isPlaying } = props;\n\n    const handleClick = () => {\n        if (currentMusic.id === music.id) {\n            return togglePlay();\n        }\n        return setMusic(music);\n    }\n\n    return (\n        <div className=\"music-wrapper\" onClick={handleClick}>\n            <div className=\"music-wrapper__image\">\n                {currentMusic.id === music.id ?\n                    <div className=\"music-wrapper__image__overlay\">\n                        <i className={\"fal \" + (isPlaying ? 'fa-pause' : 'fa-play')}></i>\n                    </div>\n                    : ''}\n                <img src={music.cover} alt={music.title} />\n            </div>\n            <div className=\"music-wrapper__body\">\n                <strong>{music.name}</strong>\n                <small>{music.artists.length > 1 ? music.artists.map((artist, i) => artist.name + (i !== music.artists.length - 1 ? ', ' : '')) : music.artists[0].name}</small>\n            </div>\n        </div>\n    );\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setMusic: music => dispatch(PlayerActions.setMusic(music)),\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic())\n    };\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Music);","import * as Consts from '../constants/player';\n\nexport const togglePlayMusic = () => {\n    return { type: Consts.TOGGLE_PLAY };\n}\n\nexport const setMusic = (payload) => {\n    return { type: Consts.SET_MUSIC, payload };\n};\n\nexport const setPlaylist = (payload) => {\n    return { type: Consts.SET_PLAYLIST, payload };\n}\n\nexport const setPos = (payload) => {\n    return { type: Consts.SET_POS, payload };\n}\n\nexport const setDuration = (payload) => {\n    return { type: Consts.SET_DURATION, payload };\n}","export const TOGGLE_PLAY = \"TOGGLE_PLAY\";\nexport const SET_MUSIC = \"SET_MUSIC\";\nexport const SET_PLAYLIST = \"SET_PLAYLIST\";\nexport const SET_POS = \"SET_POS\";\nexport const SET_DURATION = \"SET_DURATION\";","import React from 'react';\nimport Loading from './loading';\n\nimport Music from './music';\n\nfunction MusicSlider(props) {\n    const { musics, loading } = props;\n\n    return (\n        <Loading\n            loading={loading}\n        >\n            <div className=\"musics-container\">\n                <div className=\"musics-container__inner\">\n                    {musics.map((music, i) => <Music key={i} music={music} />)}\n                </div>\n            </div>\n        </Loading>\n    );\n}\n\nexport default MusicSlider;","import React from 'react';\n\nfunction Playlist(props) {\n    const { playlist } = props;\n\n    return (\n        <div className=\"music-wrapper playlist-wrapper\">\n            <div className=\"music-wrapper__image playlist-wrapper__image\">\n                <img src={playlist.image} alt={playlist.name} />\n            </div>\n            <div className=\"music-wrapper__body playlist-wrapper__body\">\n                <strong>{playlist.name}</strong>\n            </div>\n        </div>\n    );\n}\n\nexport default Playlist;","import React from 'react';\nimport Loading from './loading';\n\nimport Playlist from './playlist';\n\nfunction PlaylistsContainer(props) {\n    const { playlists, loading } = props;\n\n    return (\n        <Loading\n            loading={loading}\n        >\n            <div className=\"musics-container playlists-container\">\n                <div className=\"musics-container__inner playlists-container__inner\">\n                    {playlists.map((playlist, i) => <Playlist key={i} playlist={playlist} />)}\n                </div>\n            </div>\n        </Loading>\n    );\n}\n\nexport default PlaylistsContainer;","import React from 'react';\n\nimport MusicsContainer from './musicsContainer';\nimport PlaylistsContainer from './playlistsContainer';\n\nfunction Vitrine(props) {\n    const { name, type, data } = props.data;\n\n    return (\n        <div className=\"vitrine-wrapper\">\n            <h2 className=\"vitrine-title\">{name}</h2>\n            {type === 'musics' ? <MusicsContainer musics={data} loading={false} /> : <PlaylistsContainer playlists={data} loading={false} />}\n        </div>\n    );\n}\n\nexport default Vitrine;","import axios from 'axios';\n\nconst API_URL = \"https://cassetmusic.com/api/v1\";\n\nconst onSuccessHandler = (res, resolve) => {\n    return resolve(res.data);\n}\n\nconst onErrorHandler = (err, resolve) => {\n    if (err.response) {\n        resolve(err.response.data);\n    }\n    return console.error(err);\n}\n\nconst Api = {\n    getMusics: () => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/musics`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    },\n    getPlaylistsVitrines: (count = 10, region = 'us') => {\n        return new Promise((resolve) => {\n            axios({\n                url: `${API_URL}/playlists/vitrines?count=${count}&region=${region}`,\n                method: 'GET'\n            }).then(res => onSuccessHandler(res, resolve)).catch(err => onErrorHandler(err, resolve));\n        });\n    }\n};\n\nexport default Api;","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport MusicsContainer from '../../ui/musicsContainer';\nimport Vitrine from '../../ui/vitrine';\nimport * as Actions from '../../state/actions/home';\n\nfunction Home(props) {\n    const { musicsFind, vitrines, fetchMusicsFind, fetchVitrines } = props;\n\n    useEffect(() => {\n        fetchMusicsFind();\n        fetchVitrines();\n    }, []);\n\n    return (\n        <main className=\"container\">\n            <h2 className=\"section-title\">Discover New Music</h2>\n            <MusicsContainer musics={musicsFind.data} loading={musicsFind.loading} />\n            {vitrines.data.map(vitrine => <Vitrine data={vitrine} />)}\n        </main>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        musicsFind: state.homeReducer.musicsFind,\n        vitrines: state.homeReducer.vitrines\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchMusicsFind: () => dispatch(Actions.fetchMusicsFind()),\n        fetchVitrines: () => dispatch(Actions.fetchVitrines())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import Home from '../pages/home';\n\nconst Routes = [\n    {\n        routeName: 'home',\n        component: Home,\n        exact: true,\n        path: '/'\n    }\n];\n\nexport default Routes;","import * as Consts from '../constants/home';\n\nimport Api from '../../helpers/api';\n\nexport const fetchMusicsFind = () => {\n    return async dispatch => {\n        dispatch({ type: Consts.FETCH_MUSICS_FIND });\n        const result = await Api.getMusics();\n        if (result.success) {\n            const musics = result.data;\n            return dispatch({ payload: musics, type: Consts.FETCH_MUSICS_FIND_SUCCESS });\n        } else {\n            return dispatch({ type: Consts.FETCH_MUSICS_FIND_FAILED });\n        }\n    };\n};\n\nexport const fetchVitrines = () => {\n    return async dispatch => {\n        dispatch({ type: Consts.FETCH_VITRINES });\n        const result = await Api.getPlaylistsVitrines();\n        if (result.success) {\n            const vitrines = result.data;\n            return dispatch({ payload: vitrines, type: Consts.FETCH_VITRINES_SUCCESS });\n        } else {\n            return dispatch({ type: Consts.FETCH_VITRINES_FAILED });\n        }\n    }\n};","export const FETCH_MUSICS_FIND = \"FETCH_MUSICS_FIND\";\nexport const FETCH_MUSICS_FIND_SUCCESS = \"FETCH_MUSICS_FIND_SUCCESS\";\nexport const FETCH_MUSICS_FIND_FAILED = \"FETCH_MUSICS_FIND_FAILED\";\nexport const FETCH_VITRINES = \"FETCH_VITRINES\";\nexport const FETCH_VITRINES_SUCCESS = \"FETCH_VITRINES_SUCCESS\";\nexport const FETCH_VITRINES_FAILED = \"FETCH_VITRINES_FAILED\";","import React from 'react';\nimport { Route, Switch, Redirect, BrowserRouter as ReactRouter } from 'react-router-dom';\nimport Routes from './routes';\n\nconst Router = () => {\n    return (\n        <ReactRouter>\n            <Switch>\n                {Routes.map((Page, i) =>\n                    <Route key={i} exact={!!Page.exact} path={Page.path} component={() => <Page.component />} />\n                )}\n                <Route component={() => <Redirect to=\"/\" />} />\n            </Switch>\n        </ReactRouter>\n    )\n};\n\nexport default Router;\n","import * as Consts from '../constants/home';\n\nconst initialState = {\n    musicsFind: {\n        data: [],\n        loading: false\n    },\n    vitrines: {\n        data: [],\n        loading: false\n    }\n};\n\nconst homeReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Consts.FETCH_MUSICS_FIND:\n            return { ...state, musicsFind: { ...state.musicsFind, loading: true } };\n        case Consts.FETCH_MUSICS_FIND_SUCCESS:\n            return { ...state, musicsFind: { data: action.payload, loading: false } };\n        case Consts.FETCH_MUSICS_FIND_FAILED:\n            return { ...state, musicsFind: { ...state.musicsFind, loading: false } };\n        case Consts.FETCH_VITRINES:\n            return { ...state, vitrines: { ...state.vitrines, loading: true } };\n        case Consts.FETCH_VITRINES_SUCCESS:\n            return { ...state, vitrines: { data: action.payload, loading: false } };\n        case Consts.FETCH_VITRINES_FAILED:\n            return { ...state, vitrines: { ...state.vitrines, loading: false } };\n        default:\n            return state;\n    }\n};\n\nexport default homeReducer;","import * as Consts from '../constants/player';\n\nconst initialState = {\n    isPlaying: false,\n    music: {},\n    playlist: [],\n    currentPos: 0,\n    duration: 0\n};\n\nconst playerReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case Consts.TOGGLE_PLAY:\n            return { ...state, isPlaying: !state.isPlaying };\n        case Consts.SET_MUSIC:\n            return { ...state, music: action.payload, isPlaying: true };\n        case Consts.SET_PLAYLIST:\n            return { ...state, playlist: action.payload };\n        case Consts.SET_POS:\n            return { ...state, currentPos: action.payload };\n        case Consts.SET_DURATION:\n            return { ...state, duration: action.payload };\n        default:\n            return state;\n    };\n};\n\nexport default playerReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport homeReducer from './reducers/home';\nimport playerReducer from './reducers/player';\n\nconst reducers = combineReducers({\n    homeReducer,\n    playerReducer\n});\n\nconst store = createStore(reducers, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\n\nimport Logo from '../assets/images/logo.svg';\n\nfunction Header(props) {\n    return (\n        <header>\n            <div className=\"container d-flex align-items-center justify-content-start\">\n                <img src={Logo} alt=\"Casset\" />\n                <small>Enjoy music without borders!</small>\n            </div>\n        </header>\n    );\n}\n\nexport default Header;","import React, { useEffect, useRef } from 'react';\nimport { connect } from 'react-redux';\n\nimport * as PlayerActions from '../state/actions/player';\n\nfunction Player(props) {\n    const { currentMusic, isPlaying, currentPos, togglePlay, setPos, setDuration, duration } = props;\n    const audio = useRef(new Audio());\n    const currentPosInterval = useRef();\n\n    const setCurrentPosHandler = () => {\n        currentPosInterval.current = setInterval(function () {\n            setPos(audio.current.currentTime);\n        }, 500);\n    }\n\n    const destroyCurrentPosHandler = () => {\n        clearInterval(currentPosInterval.current);\n        currentPosInterval.current = null;\n    }\n\n    useEffect(() => {\n        if (currentMusic.link320 || currentMusic.link128 || currentMusic.link64) {\n            audio.current.src = currentMusic.link320 || currentMusic.link128 || currentMusic.link64;\n            audio.current.onloadedmetadata = function () {\n                setDuration(audio.current.duration);\n            };\n            audio.current.play();\n            if (!isPlaying) {\n                togglePlay();\n            }\n        }\n    }, [currentMusic]);\n\n    useEffect(() => {\n        if (isPlaying) {\n            setCurrentPosHandler();\n            audio.current.play();\n        } else {\n            destroyCurrentPosHandler();\n            audio.current.pause();\n        }\n    }, [isPlaying]);\n\n    return (\n        <div className=\"player-wrapper\">\n            <div className=\"container\">\n                <div className=\"player-inner\">\n                    <div className=\"player-inner__left\">\n                        <div className=\"player-inner__left__cover\">\n                            {currentMusic.id ? <img src={currentMusic.cover || ''} alt={currentMusic.name || '-'} /> : ''}\n                        </div>\n                    </div>\n                    <div className=\"player-inner__center\">\n                        <div className=\"player-inner__center__details\">\n                            {currentMusic.id ?\n                                <React.Fragment>\n                                    <div>\n                                        <strong>{currentMusic.name || '-'}</strong>\n                                        <small>\n                                            {currentMusic.artists.length ?\n                                                (currentMusic.artists.length > 1 ? currentMusic.artists.map(\n                                                    (artist, i) => artist.name + (i !== currentMusic.artists.length - 1 ? ', ' : '')\n                                                ) : currentMusic.artists[0].name)\n                                                : ''}\n                                        </small>\n                                    </div>\n                                    <div>\n                                        <b>{parseInt(currentPos / 60)}:{currentPos % 60 < 10 ? '0' + parseInt(currentPos % 60) : parseInt(currentPos % 60)}</b>\n                                        <small>/{parseInt(duration / 60)}:{duration % 60 < 10 ? '0' + parseInt(duration % 60) : parseInt(duration % 60)}</small>\n                                    </div>\n                                </React.Fragment>\n                                :\n                                <React.Fragment>\n                                    <strong>Start Playing Something...</strong>\n                                    <div>\n                                        <b>-</b>\n                                    </div>\n                                </React.Fragment>\n                            }\n                        </div>\n                        <div className=\"player-inner__center__seekbar\">\n                            <div className=\"player-inner__center__seekbar__filled\" style={{ width: currentPos > 0 ? ((currentPos * 100) / duration) + '%' : 0 }}>\n                                <div className=\"player-inner__center__seekbar__filled__thumb\"></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"player-inner__right\">\n                        <div className=\"player-inner__right__actions\">\n                            <i className=\"fal fa-backward\" />\n                            <i className={\"fal \" + (isPlaying ? 'fa-pause' : 'fa-play')} onClick={togglePlay} />\n                            <i className=\"fal fa-forward\" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => {\n    return {\n        currentMusic: state.playerReducer.music,\n        isPlaying: state.playerReducer.isPlaying,\n        currentPos: state.playerReducer.currentPos,\n        duration: state.playerReducer.duration\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        togglePlay: () => dispatch(PlayerActions.togglePlayMusic()),\n        setPos: pos => dispatch(PlayerActions.setPos(pos)),\n        setDuration: duration => dispatch(PlayerActions.setDuration(duration))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);","import React from 'react';\nimport Router from './routes/router';\n\nimport './App.scss';\nimport store from './state/store';\nimport { Provider } from 'react-redux';\nimport Header from './ui/header';\nimport Player from './ui/player';\n\nfunction App() {\n  return <Provider store={store}>\n    <Header />\n    <Router />\n    <Player />\n  </Provider>\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}